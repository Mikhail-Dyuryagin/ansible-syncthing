---

- name: Create directories
  file:
    path:   '{{ item.path }}'
    state:  '{{ item.state  | default("directory") }}'
    owner:  '{{ item.owner  | default("root") }}'
    group:  '{{ item.group  | default("root") }}'
    mode:   '{{ item.mode   | default("0755") }}'
  with_items:
    - { path: '{{ role_syncthing.folders.path }}', owner: '{{ role_syncthing_user }}' }
  when: (item.path is defined and item.path)

- name: get system config
  uri:
    url: "http://{{role_syncthing_api}}/rest/system/config"
    return_content: yes
  register: syncthing_config_raw

- name: set syncthing_(config,config_old,myID)
  set_fact:
    syncthing_config: "{{syncthing_config_raw.content|from_json}}"
    syncthing_config_old: "{{syncthing_config_raw.content|from_json}}"
    syncthing_myID: "{{ syncthing_config_raw.x_syncthing_id }}"

- name: list devices of folders
  set_fact:
    syncthing_devices: "{% if syncthing_devices is defined %}{% for i in syncthing_devices %}{% if i.deviceID != hostvars[item].syncthing_myID %}[{{i}}] + {% endif %}{% endfor %}{% endif %}[ { u'deviceID': '{{hostvars[item].syncthing_myID}}', u'name': '{{hostvars[item].ansible_hostname}}' } ]"
  with_items: "{{ role_syncthing.inventory_hosts }}"
  when: hostvars[item].syncthing_myID is defined

- name: add devices
  set_fact:
    syncthing_config: "{
      u'gui': {{syncthing_config.gui}},
      u'version': {{syncthing_config.version}},
      u'ignoredDevices': {{syncthing_config.ignoredDevices}},
      u'options': {{syncthing_config.options}},
      u'folders': {{syncthing_config.folders}},
      u'devices': {%for i in syncthing_config.devices %}{% if i.deviceID != item.deviceID %}[{{i}}] + {% endif %}{% endfor %}[{
        u'compression': u'always',
        u'certName': u'',
        u'introducer': False,
        u'name': u'{{item.name}}',
        u'deviceID': u'{{item.deviceID}}',
        u'addresses': [
          u'dynamic'
        ]}]}"
  with_items: "{{ syncthing_devices }}"
  when: item.deviceID != syncthing_myID

- name: list id folders
  set_fact:
    syncthing_list: "{{item.devices}}"
  with_items: "{{ syncthing_config.folders }}"
  when: item.id == role_syncthing.folders.id

- name: list devices of folders
  set_fact:
    syncthing_list: "{% if syncthing_list is defined %}{% for i in syncthing_list %}{% if i.deviceID != hostvars[item].syncthing_myID %}[{{i}}] + {% endif %}{% endfor %}{% endif %}[ { u'deviceID': '{{hostvars[item].syncthing_myID}}' } ]"
  with_items: "{{ role_syncthing.inventory_hosts }}"
  when: hostvars[item].syncthing_myID is defined

- name: add folders
  set_fact:
    syncthing_config: "{
      u'gui': {{syncthing_config.gui}},
      u'version': {{syncthing_config.version}},
      u'ignoredDevices': {{syncthing_config.ignoredDevices}},
      u'options': {{syncthing_config.options}},
      u'devices': {{syncthing_config.devices}},
      u'folders': {%for i in syncthing_config.folders %}{% if i.id != role_syncthing.folders.id %}[{{i}}] + {% endif %}{% endfor %} [{
        u'id': '{{role_syncthing.folders.id}}',
        u'path': u'{{role_syncthing.folders.path}}',
        u'devices': {{syncthing_list}},
        u'autoNormalize': True,
        u'ignoreDelete': False,
        u'ignorePerms': False,
        u'readOnly': False,
        u'copiers': 0,
        u'hashers': 0,
        u'invalid': u'',
        u'maxConflicts': -1,
        u'minDiskFreePct': 1,
        u'order': u'random',
        u'pullerPauseS': 0,
        u'pullerSleepS': 0,
        u'pullers': 0,
        u'rescanIntervalS': 60,
        u'scanProgressIntervalS': 0,
        u'versioning': {
          u'params': {},
          u'type': u''
        } }]}"

- name: post config
  uri:
    url: "http://{{role_syncthing_api}}/rest/system/config"
    method: POST
    return_content: yes
    HEADER_Content-Type: "application/json"
    HEADER_X-API-Key: "{{syncthing_config.gui.apiKey}}"
    body: "{{ syncthing_config | to_json }}"
  when: syncthing_config != syncthing_config_old

- name: syncthing restart
  uri:
    url: "http://{{role_syncthing_api}}/rest/system/restart"
    method: POST
    return_content: yes
    HEADER_X-API-Key: "{{syncthing_config.gui.apiKey}}"
  when: syncthing_config != syncthing_config_old

## vim: foldmethod=marker:tabstop=2:shiftwidth=2:softtabstop=2
